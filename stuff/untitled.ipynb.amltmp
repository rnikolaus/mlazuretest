{
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\r\n",
        "import numpy as np\r\n",
        "import pandas as pd\r\n",
        "import random\r\n",
        "from enum import Enum\r\n",
        "import datetime\r\n",
        "import gym\r\n",
        "from gym import spaces\r\n",
        "#from dqn import DQN\r\n",
        "#from utils import tradeclass\r\n",
        "#from utils import BCTrade\r\n",
        "\r\n",
        "from azureml.contrib.train.rl import ReinforcementLearningEstimator, Ray\r\n",
        "from azureml.core.environment import Environment"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {
        "gather": {
          "logged": 1640717435391
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from files import BCTrade_utils\r\n",
        "\r\n",
        "df = BCTrade_utils.getData()\r\n",
        "del df['ask']\r\n",
        "del df['bid']\r\n",
        "df.to_csv(path_or_buf=\"data.csv\")"
      ],
      "outputs": [],
      "execution_count": 9,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1640774585746
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core import Workspace, Dataset\r\n",
        "\r\n",
        "subscription_id = '736ac584-c533-43a9-8a83-d19bf290ffb8'\r\n",
        "resource_group = 'ML-RG'\r\n",
        "workspace_name = 'ML-Workspace'\r\n",
        "\r\n",
        "workspace = Workspace(subscription_id, resource_group, workspace_name)\r\n",
        "\r\n",
        "dataset = Dataset.get_by_name(workspace, name='btc')\r\n",
        "df = dataset.to_pandas_dataframe()\r\n",
        "del df['date']\r\n",
        "df['ask'] = df['price']*1.000\r\n",
        "df['bid'] = df['price']*1.000\r\n",
        "df = df.reindex(columns=['price','ask','bid','volume'])\r\n",
        "df "
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 5,
          "data": {
            "text/plain": "                       price      ask      bid    volume\n2015-03-17 18:27:49   290.00   290.00   290.00  3.045430\n2015-03-18 13:31:32   290.00   290.00   290.00  0.042517\n2015-03-19 10:12:58   290.00   290.00   290.00  2.521450\n2015-03-19 10:20:03   290.00   290.00   290.00  0.625478\n2015-03-19 10:20:23   290.00   290.00   290.00  4.521450\n...                      ...      ...      ...       ...\n2018-07-27 21:48:25  7049.04  7049.04  7049.04  0.001698\n2018-07-27 21:49:15  7049.04  7049.04  7049.04  0.200000\n2018-07-27 21:49:15  7049.05  7049.05  7049.05  0.001698\n2018-07-27 21:49:16  7049.05  7049.05  7049.05  0.198302\n2018-07-27 21:53:24  7054.97  7054.97  7054.97  0.003544\n\n[198533 rows x 4 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>price</th>\n      <th>ask</th>\n      <th>bid</th>\n      <th>volume</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2015-03-17 18:27:49</th>\n      <td>290.00</td>\n      <td>290.00</td>\n      <td>290.00</td>\n      <td>3.045430</td>\n    </tr>\n    <tr>\n      <th>2015-03-18 13:31:32</th>\n      <td>290.00</td>\n      <td>290.00</td>\n      <td>290.00</td>\n      <td>0.042517</td>\n    </tr>\n    <tr>\n      <th>2015-03-19 10:12:58</th>\n      <td>290.00</td>\n      <td>290.00</td>\n      <td>290.00</td>\n      <td>2.521450</td>\n    </tr>\n    <tr>\n      <th>2015-03-19 10:20:03</th>\n      <td>290.00</td>\n      <td>290.00</td>\n      <td>290.00</td>\n      <td>0.625478</td>\n    </tr>\n    <tr>\n      <th>2015-03-19 10:20:23</th>\n      <td>290.00</td>\n      <td>290.00</td>\n      <td>290.00</td>\n      <td>4.521450</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2018-07-27 21:48:25</th>\n      <td>7049.04</td>\n      <td>7049.04</td>\n      <td>7049.04</td>\n      <td>0.001698</td>\n    </tr>\n    <tr>\n      <th>2018-07-27 21:49:15</th>\n      <td>7049.04</td>\n      <td>7049.04</td>\n      <td>7049.04</td>\n      <td>0.200000</td>\n    </tr>\n    <tr>\n      <th>2018-07-27 21:49:15</th>\n      <td>7049.05</td>\n      <td>7049.05</td>\n      <td>7049.05</td>\n      <td>0.001698</td>\n    </tr>\n    <tr>\n      <th>2018-07-27 21:49:16</th>\n      <td>7049.05</td>\n      <td>7049.05</td>\n      <td>7049.05</td>\n      <td>0.198302</td>\n    </tr>\n    <tr>\n      <th>2018-07-27 21:53:24</th>\n      <td>7054.97</td>\n      <td>7054.97</td>\n      <td>7054.97</td>\n      <td>0.003544</td>\n    </tr>\n  </tbody>\n</table>\n<p>198533 rows Ã— 4 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 5,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1640775236504
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from files import BCTrade_utils\r\n",
        "\r\n",
        "BCTrade_utils.registerBCTrade()"
      ],
      "outputs": [],
      "execution_count": 6,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1640775393027
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import ray\r\n",
        "from ray import tune\r\n",
        "\r\n",
        "#ray.init()\r\n",
        "tune.run(\r\n",
        "    \"PPO\",\r\n",
        "    stop={\"training_iteration\": 10,\"episode_reward_mean\": 10},\r\n",
        "    checkpoint_at_end=True,\r\n",
        "    config={\r\n",
        "        #\"env\": \"CartPole-v0\",\r\n",
        "        \"env\": \"BCTrade\",\r\n",
        "        \"num_gpus\": 0,\r\n",
        "        \"num_workers\": 1,\r\n",
        "        #\"keep_checkpoints_num\":1,\r\n",
        "       \r\n",
        "        #\"lr\": tune.grid_search([0.01]),\r\n",
        "        #\"lr\": tune.grid_search([0.01, 0.001, 0.0001]),\r\n",
        "    },\r\n",
        ")"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<IPython.core.display.HTML object>",
            "text/html": "== Status ==<br>Current time: 2021-12-29 10:56:41 (running for 00:00:00.16)<br>Memory usage on this node: 3.6/13.7 GiB<br>Using FIFO scheduling algorithm.<br>Resources requested: 0/4 CPUs, 0/0 GPUs, 0.0/6.5 GiB heap, 0.0/3.25 GiB objects<br>Result logdir: /home/azureuser/ray_results/PPO<br>Number of trials: 1/1 (1 PENDING)<br><table>\n<thead>\n<tr><th>Trial name             </th><th>status  </th><th>loc  </th></tr>\n</thead>\n<tbody>\n<tr><td>PPO_BCTrade_00cca_00000</td><td>PENDING </td><td>     </td></tr>\n</tbody>\n</table><br><br>"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "\u001b[2m\u001b[36m(pid=10215)\u001b[0m 2021-12-29 10:56:45,935\tINFO trainer.py:753 -- Tip: set framework=tfe or the --eager flag to enable TensorFlow eager execution\n\u001b[2m\u001b[36m(pid=10215)\u001b[0m 2021-12-29 10:56:45,935\tINFO ppo.py:167 -- In multi-agent mode, policies will be optimized sequentially by the multi-GPU optimizer. Consider setting simple_optimizer=True if this doesn't work for you.\n\u001b[2m\u001b[36m(pid=10215)\u001b[0m 2021-12-29 10:56:45,935\tINFO trainer.py:772 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m /anaconda/envs/azureml_py36/lib/python3.6/site-packages/gym/spaces/box.py:74: UserWarning: \u001b[33mWARN: Box bound precision lowered by casting to float32\u001b[0m\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   \"Box bound precision lowered by casting to {}\".format(self.dtype)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m WARNING:tensorflow:From /anaconda/envs/azureml_py36/lib/python3.6/site-packages/tensorflow_core/python/ops/resource_variable_ops.py:1635: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m Instructions for updating:\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m If using Keras pass *_constraint arguments to layers.\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m 2021-12-29 10:56:59,531\tWARNING deprecation.py:39 -- DeprecationWarning: `SampleBatch['is_training']` has been deprecated. Use `SampleBatch.is_training` instead. This will raise an error in the future!\n2021-12-29 10:57:00,366\tWARNING tune.py:587 -- SIGINT received (e.g. via Ctrl+C), ending Ray Tune run. This will try to checkpoint the experiment state one last time. Press CTRL+C one more time (or send SIGINT/SIGKILL/SIGTERM) to skip. \n\u001b[2m\u001b[36m(pid=10215)\u001b[0m WARNING:tensorflow:From /anaconda/envs/azureml_py36/lib/python3.6/site-packages/tensorflow_core/python/ops/resource_variable_ops.py:1635: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.\n\u001b[2m\u001b[36m(pid=10215)\u001b[0m Instructions for updating:\n\u001b[2m\u001b[36m(pid=10215)\u001b[0m If using Keras pass *_constraint arguments to layers.\n\u001b[2m\u001b[36m(pid=10215)\u001b[0m 2021-12-29 10:57:00,977\tWARNING deprecation.py:39 -- DeprecationWarning: `SampleBatch['is_training']` has been deprecated. Use `SampleBatch.is_training` instead. This will raise an error in the future!\n\u001b[2m\u001b[36m(pid=10215)\u001b[0m 2021-12-29 10:57:01,989\tWARNING trainer_template.py:186 -- `execution_plan` functions should accept `trainer`, `workers`, and `config` as args!\n\u001b[2m\u001b[36m(pid=10215)\u001b[0m 2021-12-29 10:57:01,990\tINFO trainable.py:113 -- Trainable.setup took 16.161 seconds. If your trainable is slow to initialize, consider setting reuse_actors=True to reduce actor creation overheads.\n\u001b[2m\u001b[36m(pid=10215)\u001b[0m 2021-12-29 10:57:02,022\tWARNING util.py:57 -- Install gputil for GPU system monitoring.\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m 2021-12-29 10:57:02,146\tERROR worker.py:425 -- SystemExit was raised from the worker\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m Traceback (most recent call last):\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"python/ray/_raylet.pyx\", line 692, in ray._raylet.task_execution_handler\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"python/ray/_raylet.pyx\", line 521, in ray._raylet.execute_task\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"python/ray/_raylet.pyx\", line 558, in ray._raylet.execute_task\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"python/ray/_raylet.pyx\", line 565, in ray._raylet.execute_task\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"python/ray/_raylet.pyx\", line 569, in ray._raylet.execute_task\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"python/ray/_raylet.pyx\", line 519, in ray._raylet.execute_task.function_executor\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/_private/function_manager.py\", line 576, in actor_method_executor\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     return method(__ray_actor, *args, **kwargs)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/util/tracing/tracing_helper.py\", line 451, in _resume_span\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     return method(self, *_args, **_kwargs)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/util/iter.py\", line 1151, in par_iter_next\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     return next(self.local_it)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 378, in gen_rollouts\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     yield self.sample()\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/util/tracing/tracing_helper.py\", line 451, in _resume_span\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     return method(self, *_args, **_kwargs)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 753, in sample\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     batches = [self.input_reader.next()]\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/rllib/evaluation/sampler.py\", line 103, in next\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     batches = [self.get_data()]\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/rllib/evaluation/sampler.py\", line 233, in get_data\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     item = next(self._env_runner)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/rllib/evaluation/sampler.py\", line 626, in _env_runner\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     active_episodes=active_episodes,\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/rllib/evaluation/sampler.py\", line 1039, in _do_policy_eval\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     episodes=[active_episodes[t.env_id] for t in eval_data])\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/rllib/policy/tf_policy.py\", line 470, in compute_actions_from_input_dict\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     fetched = builder.get(to_fetch)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/rllib/utils/tf_run_builder.py\", line 44, in get\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     self.feed_dict, os.environ.get(\"TF_TIMELINE_DIR\"))\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/rllib/utils/tf_run_builder.py\", line 92, in run_timeline\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     fetches = sess.run(ops, feed_dict=feed_dict)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/tensorflow_core/python/client/session.py\", line 960, in run\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     run_metadata_ptr)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/tensorflow_core/python/client/session.py\", line 1183, in _run\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     feed_dict_tensor, options, run_metadata)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/tensorflow_core/python/client/session.py\", line 1361, in _do_run\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     run_metadata)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/tensorflow_core/python/client/session.py\", line 1367, in _do_call\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     return fn(*args)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/tensorflow_core/python/client/session.py\", line 1352, in _run_fn\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     target_list, run_metadata)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/tensorflow_core/python/client/session.py\", line 1445, in _call_tf_sessionrun\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     run_metadata)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m   File \"/anaconda/envs/azureml_py36/lib/python3.6/site-packages/ray/worker.py\", line 422, in sigterm_handler\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m     sys.exit(1)\n\u001b[2m\u001b[36m(pid=10216)\u001b[0m SystemExit: 1\n2021-12-29 10:57:02,265\tERROR tune.py:626 -- Trials did not complete: [PPO_BCTrade_00cca_00000]\n2021-12-29 10:57:02,267\tINFO tune.py:630 -- Total run time: 24.85 seconds (20.97 seconds for the tuning loop).\n2021-12-29 10:57:02,268\tWARNING tune.py:635 -- Experiment has been interrupted, but the most recent state was saved. You can continue running this experiment by passing `resume=True` to `tune.run()`\n"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<IPython.core.display.HTML object>",
            "text/html": "== Status ==<br>Current time: 2021-12-29 10:57:02 (running for 00:00:20.96)<br>Memory usage on this node: 4.1/13.7 GiB<br>Using FIFO scheduling algorithm.<br>Resources requested: 2.0/4 CPUs, 0/0 GPUs, 0.0/6.5 GiB heap, 0.0/3.25 GiB objects<br>Result logdir: /home/azureuser/ray_results/PPO<br>Number of trials: 1/1 (1 RUNNING)<br><table>\n<thead>\n<tr><th>Trial name             </th><th>status  </th><th>loc           </th></tr>\n</thead>\n<tbody>\n<tr><td>PPO_BCTrade_00cca_00000</td><td>RUNNING </td><td>10.0.0.4:10215</td></tr>\n</tbody>\n</table><br><br>"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<IPython.core.display.HTML object>",
            "text/html": "== Status ==<br>Current time: 2021-12-29 10:57:02 (running for 00:00:20.97)<br>Memory usage on this node: 4.1/13.7 GiB<br>Using FIFO scheduling algorithm.<br>Resources requested: 2.0/4 CPUs, 0/0 GPUs, 0.0/6.5 GiB heap, 0.0/3.25 GiB objects<br>Result logdir: /home/azureuser/ray_results/PPO<br>Number of trials: 1/1 (1 RUNNING)<br><table>\n<thead>\n<tr><th>Trial name             </th><th>status  </th><th>loc           </th></tr>\n</thead>\n<tbody>\n<tr><td>PPO_BCTrade_00cca_00000</td><td>RUNNING </td><td>10.0.0.4:10215</td></tr>\n</tbody>\n</table><br><br>"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "execution_count": 7,
          "data": {
            "text/plain": "<ray.tune.analysis.experiment_analysis.ExperimentAnalysis at 0x7fbeebe82f98>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 7,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1640775423075
        }
      }
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3-azureml",
      "language": "python",
      "display_name": "Python 3.6 - AzureML"
    },
    "language_info": {
      "name": "python",
      "version": "3.6.9",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "kernel_info": {
      "name": "python3-azureml"
    },
    "microsoft": {
      "host": {
        "AzureML": {
          "notebookHasBeenCompleted": true
        }
      }
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}